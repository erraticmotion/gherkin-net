<?xml version="1.0" encoding="utf-8" ?>
<docs>
  <doc name="ClassSummary">
    <summary>
      Given-When-Then, a pattern for arranging and formatting code in
      unit, integration and customer acceptance test fixtures. 
    </summary>
  </doc>
  <doc name="ClassSut">
    <typeparam name="TSut">
      The Software/System Under Test. 
    </typeparam>
  </doc>
  <doc name="ClassKernel">
    <typeparam name="TFixtureKernel">The IoC fixture kernel.</typeparam>
  </doc>
  <doc name="SetupSummary">
    <summary>
      Creates a test fixture by first binding objects against the IoC container,
      arranging all pre-conditions and inputs, and then acting on the SUT.
    </summary>
  </doc>
  <doc name="CleanupSummary">
    <summary>
      Cleans the test environment after the test methods have been executed
      and also clears the IoC cache.
    </summary>
  </doc>
  <doc name="CleanupRemarks">
    <remarks>
      Will call the <see cref="IDisposable" /> interface if the SUT implements it.
    </remarks>
  </doc>
  <doc name="GetSummary">
    <summary>
      Gets an instance of the type specified by the <typeparamref name="T"/> from the 
      underlying IoC container.
    </summary>
    <typeparam name="T">
      The type of interface to be returned.
    </typeparam>
    <returns>
      An object that implements the <typeparamref name="T"/> from the underlying IoC container.
    </returns>
  </doc>
  <doc name="GetException">
    <exception cref="System.InvalidOperationException">Call Arrange before Get{T}.</exception>
  </doc>
</docs> 
